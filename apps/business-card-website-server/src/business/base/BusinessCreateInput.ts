/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  ValidateNested,
} from "class-validator";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { ServiceCreateNestedManyWithoutBusinessesInput } from "./ServiceCreateNestedManyWithoutBusinessesInput";
import { Type } from "class-transformer";
import { ContactCreateNestedManyWithoutBusinessesInput } from "./ContactCreateNestedManyWithoutBusinessesInput";

@InputType()
class BusinessCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  logo?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  location?: string | null;

  @ApiProperty({
    required: false,
    type: () => ServiceCreateNestedManyWithoutBusinessesInput,
  })
  @ValidateNested()
  @Type(() => ServiceCreateNestedManyWithoutBusinessesInput)
  @IsOptional()
  @Field(() => ServiceCreateNestedManyWithoutBusinessesInput, {
    nullable: true,
  })
  services?: ServiceCreateNestedManyWithoutBusinessesInput;

  @ApiProperty({
    required: false,
    type: () => ContactCreateNestedManyWithoutBusinessesInput,
  })
  @ValidateNested()
  @Type(() => ContactCreateNestedManyWithoutBusinessesInput)
  @IsOptional()
  @Field(() => ContactCreateNestedManyWithoutBusinessesInput, {
    nullable: true,
  })
  contacts?: ContactCreateNestedManyWithoutBusinessesInput;
}

export { BusinessCreateInput as BusinessCreateInput };
